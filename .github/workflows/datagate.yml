name: DataGate CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.go-version.outputs.go-version }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Get Go version
      id: go-version
      run: echo "go-version=1.23" >> $GITHUB_OUTPUT

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Download Go modules
      run: go mod download

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ needs.setup.outputs.go-version }}
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.61.0
        args: --timeout=5m

  integration-tests:
    needs: setup
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: datagate_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ needs.setup.outputs.go-version }}
        cache: true

    - name: Run integration tests
      run: go test -v -tags=integration ./...
      env:
        TEST_DATABASE_URL: postgres://test_user:test_pass@localhost:5432/datagate_test?sslmode=disable
